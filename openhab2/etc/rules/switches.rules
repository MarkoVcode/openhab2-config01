
rule "React on staris light switch (T1_3_109_Switch_1) change/update off"
when
    Item T1_3_109_Switch_1 changed from OFF
then
    TR_1_BackLight.sendCommand(100)
    TR_1_ExternalLight.sendCommand(0)
    //if between 22 and 6 set timer to switch off within 30 mins
end

rule "React on staris light switch (T1_3_109_Switch_1) change/update on"
when
    Item T1_3_109_Switch_1 changed from ON
then
    TR_1_BackLight.sendCommand(50)
    TR_1_ExternalLight.sendCommand(100)
    //if between 6 and 22 set timer to switch on within 10 mins
end

rule "Disable stairs light for night time"
when
    Time cron "0 0 22 1/1 * ? *"
then
    T1_3_109_Switch_1.sendCommand(OFF)
end

rule "Enable stairs light for day time"
when
    Time cron "0 0 6 1/1 * ? *"
then
    T1_3_109_Switch_1.sendCommand(ON)
end

rule "Enable bathroom sink light at sunset"
when
    Channel "astro:sun:local:set#event" triggered
then
    switch(receivedEvent.getEvent()) {
        case "START": {
            SV__119_Dimmer.sendCommand(60)
        }
    }
end

rule "Disable bathroom sink light at sunrise"
when
    Channel "astro:sun:local:rise#event" triggered
then
    switch(receivedEvent.getEvent()) {
        case "START": {
            SV__119_Switch_2.sendCommand(OFF)
        }
    }
end



rule "Test Switch"
when
    Item T1_3_107_Switch_1 changed from OFF
then
    SV__119_Dimmer.sendCommand(80)
end

rule "Test Switch2"
when
    Item T1_3_107_Switch_1 changed from ON
then
    SV__119_Switch_2.sendCommand(OFF)
end

//rule "Start wake up light on sunrise"
//when
//    Channel "astro:sun:local:rise#event" triggered
//then
//    switch(receivedEvent.getEvent()) {
//        case "START": {
//            T1_3_106_Switch_3.sendCommand(ON)
//        }
//    }
//end

//rule "React on Switch-3 (T1_3_106_Switch_3) change/update timer test"
//when
//    Item T1_3_106_Switch_3 changed from OFF
//then
//    createTimer(now.plusSeconds(30), [|
//        T1_3_106_Switch_3.sendCommand(OFF)
//    ])
//end

